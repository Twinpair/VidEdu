<% provide(:title, @video.title) %>

<div class="site-wrapper">
    <div class="site-wrapper-inner">
      <div class="cover-container">
        <div class="inner cover">
          <h1 class="cover-heading"><p class="text-center"><%= @video.title %></p></h1>
          <div class="text-center">
            <div id="uid"><%= @video.uid %></div>
            <p><b>Created By: <%= @video_user ? @video_user.username : "You" %></b></p>
            <div class="text-center">
            <% if current_user && @video.user_id == current_user.id %>
              <%= link_to "Edit", edit_video_path, :class=>"btn btn-lg btn-warning" %>
              <%= link_to 'Delete', @video, method: :delete, data: { confirm: 'Are you sure?'},:class=>"btn btn-lg btn-danger" %>
            <% end %>
            </div><br>
          </div>
            
          <div class="container-fluid">

              <!-- LEFT side-->
              <div class="col-sm-6">
                <h4 class="text-center"><b>Video:<b></h4>
                <div id="player"></div>
              <% if @video.subject.default_subject?%>
                <h3 id="subject-text"><strong>Subject: </strong>None</h3>
              <% else %>
                <h3 id="subject-text"><strong>Subject: </strong><%= link_to @video.subject.subject, subject_path(@video.subject.id), class: "white-background-link" %></h3>
              <% end %>
              </div>

              <!-- RIGHT SIDE -->
              <h4 class="text-center"><b>Notes:<b></h4>
              <div id="right_side_show" class="col-sm-6">
                <div class="col-lg-12">
              <% if @video.note? %>
                  <h4>
                    <div id="note_area_show">
                      <b><%=raw @video.note %></b>
                    </div>
                  </h4>
              <% else %>
                  <p class="text-center"><h2><i>No Notes</i></h2></p>
              <% end %>    
                </div>
              </div>

            <% if @video.note? %>
              <div class="col-lg-6 text-center minor-margin">
                <span><strong>Save Notes To My Computer</strong></span>&nbsp;
                <button id="create_show" type="button" class="btn btn-primary">
                  <span class="glyphicon glyphicon-save"></span>
                </button>
                <a class="white-background-link" download="<%= @video.title %>.txt" id="downloadlink" style="display: none">Download</a>
              </div>
            <% end %>

            </div><br>

          <% if current_user %>
            <%= render 'comments/form' %>
          <% end %> 

            <h4 class="text-center" id="comment_count">Comments (<%= @comments.count %>)</h4>
            <div class="panel panel-default" id="comments">
              <div class="panel-body">
                <ul class="media-list">
                  <%= render @comments %>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script type="text/javascript">
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    
      var time_with_s;
      var time;
      var video_id;
      video_id = $('#uid').text();
      console.log(video_id); 

      var ps = document.getElementsByClassName('timestamp_note');
      var real; 
        for(var i = 0; i < ps.length; i++){
             
           console.log("Element: " + ps[i].text); 
        }
        

      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '390',
          width: '640',
          videoId: video_id,
          events: {
            'onStateChange': onPlayerStateChange
          }
        });
      }

      function onPlayerReady(event) {
        event.target.playVideo();
      }

      var done = false;
      var the_time;
      var video_time;

      var current_timestamp;
      function onPlayerStateChange(event) {

        current_timestamp = ps[counter].text.replace("s",'');
        var the_time = current_timestamp * 1000; 

        console.log("the_time: " + the_time); 
        console.log("counter: " + counter); 

        if (event.data == YT.PlayerState.PLAYING) {

          setInterval(checkTime, the_time);

        }
      }

      var counter = 0; 
      function checkTime(){
      
        $(this.real[counter]).css('background-color','#FFFF00');
              counter++; 
              
      }

      function stopVideo() {
        player.stopVideo();
      }

      function pauseVideo(){
        player.pauseVideo(); 
      }

      function currentTime(){
        document.getElementById('player').innerHTML = player.getCurrentTime();

      }


       
      

      function highlight_time(e){
       
        $('a.timestamp_note').css('background-color','none');

        video_time = player.getCurrentTime();

        time_with_s = e.currentTarget.text;

        console.log(time_with_s); 

        time = time_with_s.replace("s",'');
        console.log("time:" + time);
        console.log("video time: " + video_time.toFixed(0)); 

      }

       function noBackColor(){
        $('a.timestamp_note').css('background-color','none');

      }


      function goToTime(e){
        e.preventDefault();
        time_with_s = e.currentTarget.text;
        time = time_with_s.replace("s",'');
        append_timestamp(time);
      }

      var ps = document.getElementsByClassName('timestamp_note');

      $('a.timestamp_note').click(goToTime);
      $('a.timestamp_note').click(highlight_time);


      function append_timestamp(time) {
          playerSeekTo(player, time); 
      }

     function playerSeekTo(player, seconds) {
          player.seekTo(seconds);
      }

      var content;
      // saving notes to local machine
      $('#create_show').click(function(){
         content = $('#note_area_show').text();
         console.log(content);
      });
      var textFile = null,
      makeTextFile = function () {
        var data = new Blob([content], {type: 'text/plain'});
        if (textFile !== null) {
          window.URL.revokeObjectURL(textFile);
        }
        textFile = window.URL.createObjectURL(data);
        return textFile;
      };
      var create = document.getElementById('create_show'),
        textbox = content;
            console.log(textbox); 
      create.addEventListener('click', function () {
          var link = document.getElementById('downloadlink');
          link.href = makeTextFile(textbox);
          link.style.display = 'block';
      }, false);
    </script>