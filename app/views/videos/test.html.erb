<!DOCTYPE html>
<%= tinymce_assets %>
<%= tinymce %>


<style type="text/css">
   textarea {
  padding-left: 10px;
  }  
  #note_area{
  max-width: 100%;
  min-width: 100%;
  max-height: 300%;
  min-height: 300%;
  }
  iframe{
  width: 100%;
  height: 400px;
  }
  .insert_video{
  width: 60%;
  }
  .video_button{
  width: 15%;
  }
  #input_area{
  width: 100%;
  float: left;
  }
  #submit_btn{
  width: 100px;
  margin-left: 10px;
  }
  #save_btn{
  padding-right:25px; 
  padding-left:25px;
  padding-top: 15px;
  padding-bottom:15px;
  float: right;
  margin-top: 10px;
  }
  .rating{
  float: right;
  padding-top: 0px;
  padding-bottom: 10px;
  }
  #write_review{
  max-width: 100%;
  min-width: 100%;
  max-height: 300%;
  min-height: 300%;
  }
  #right_side{
  float:right !important; 
  margin-top: 0px;
  }
  #video_title{
    width:90%;
    float:right;
    margin-bottom: 10px;
  }
  #player{
    width:100%;

    
  }
  #content{
    width:80%;

  }
  #timestamp{
    width: 10%;
    height: 370px;
    float: left;
    border-style: solid;
    border-width: 1px;
    margin-top: 140px;
    font-size: 11px;
}
  #form_content{
    width: 90%;
    float:right;
  }
 

/*# sourceMappingURL=custom.css.map */

  
</style>
    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->

      <div class="container-fluid">
          <div class = "col-sm-12">



            <!-- LEFT side-->
            <div class="col-sm-6">
              <!-- Currently takes you to the profile page -->
              <%= render :partial=>"new", :locals=> {:video=>Video.new} %>

                  <div id="player"></div>

                <%= render :partial=>"review" %>
         
            </div>



            <!-- RIGHT side-->
            <div id="right_side" class="col-sm-6">

           <div class="form-group">
             <!-- <label for="Title">Name:</label> --> 
             <input type="text" class="form-control" id="video_title" placeholder="Insert Title">
          </div>

              <div id="timestamp"></div>

              <!-- TinyIMCE Form -->
              <form id="form_content" method="post" action="somepage">
                  <textarea id="content" rows="20"></textarea>
              </form>
               
              <div style="float:right;">Share or Upload on: Evernote -- Local </div>
              
              <%= render :partial=>"note_summary" %>

             <!--  <button id="save_btn" type="submit" class="btn btn-primary" onClick="save()">Save</button>  -->

             
                
              <div id="summary_bottom"></div>  

            </div>
         
          </div>
      </div>




<script type="text/javascript">

    var URL;
    var embeded_url_code;
    var video_id;
    var player;


    console.log("Locked and Loaded");

    $(function() {  
        $("#button_sbmt").click(function() {
            URL = document.getElementById("input_area").value;
            console.log(URL);
            parse_embeded_code(URL);
            get_embeded_code();
            youTubeIframeAPIReady();

        });
    });

    function parse_embeded_code(URL) {
        embeded_url_code = URL.split("=").pop();

    }

    function get_embeded_code() {
        video_id = embeded_url_code;
        //document.getElementById("ytplayer").src="http://www.youtube.com/embed/"+embeded_url_code+"?autoplay=0";
    }

    // 2. This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement('script');

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);


    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
 


    function youTubeIframeAPIReady() {
        console.log(video_id);

        player = new YT.Player('player', {
            height: '390',
            width: '640',
            videoId: video_id
        });
    }



    // 4. The API will call this function when the video player is ready.
    function onPlayerReady(event) {
        event.target.playVideo();
    }


    var bool_val = false;
    var content;
    var summary_content;
    var review_content;
    var youtube_url;
    var save;

    tinymce.init({

        selector: "#content",
        plugins: [
            "advlist autolink lists link image charmap print preview anchor",
            "searchreplace visualblocks code fullscreen",
            "insertdatetime media table contextmenu paste"
        ],
        toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",


        setup: function(editor) {

                editor.on('keydown', function(args) {
                        player.pauseVideo();

                        if (bool_val) {
                            append_timestamp(player.getCurrentTime());
                            bool_val = false;
                          }
                    

                    // on "return" key, resume video
                    if (args.keyCode == 13) {
                        player.playVideo();
                        bool_val = true;
                    }

                    content = tinyMCE.activeEditor.getContent();

                });

            } // END SETUP

    });



    // saves summary, review, video URL, and notes
    // TODO: save rating, save video URL
    save = function() {

        summary_content = document.getElementById("summary_area").value;
        review_content = document.getElementById("write_review").value;

        $('#summary_bottom').append("<p>Summary: " + summary_content + "</p>");
        $('#summary_bottom').append("<p>Review: " + review_content + "</p>");
        $('#summary_bottom').append("<p>Notes: " + content + "</p>");


    }


    function append_timestamp(time) {
        console.log(time);
        $('#timestamp').append("<p><a href='#' onclick=playerSeekTo(player," + time + ")>" + time.toFixed(2) + "</a></p>");
        

        // TODO: in the href, put the youtube video and it's current time in there!!!
       tinymce.activeEditor.$("p").prepend("<a href='#' onclick=playerSeekTo(player," + time + ")>"+ time.toFixed(2) + "</a>: ");

//           tinymce.activeEditor.dom.add(tinymce.activeEditor.getBody(), 'a', {title: 'My page 1', value: 'http://www.tinymce.com'},
// , time.toFixed(2));
    }
        function playerSeekTo(player, seconds) {
        player.seekTo(seconds);
    }



</script>




